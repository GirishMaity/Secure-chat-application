{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmait\\\\OneDrive\\\\Desktop\\\\Final Project\\\\frontend\\\\src\\\\components\\\\Authentication\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { Show } from \"@chakra-ui/media-query\";\nimport { toast } from \"@chakra-ui/toast\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const history = useHistory();\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setLoading(true);\n\n    if (!email || !password) {\n      toast({\n        title: \"Please fill all the fields\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/user/login\", {\n        email,\n        password\n      }, config);\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5px\",\n    color: \"black\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"email\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Your Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"password\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Enter Your Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      width: \"100%\",\n      style: {\n        marginTop: 15\n      },\n      onClick: submitHandler,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      colorScheme: \"red\",\n      width: \"100%\",\n      onClick: () => {\n        setEmail(\"guest@email.com\");\n        setPassword(\"123456\");\n      },\n      children: \"Guest Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"lkcVyWxPUgeB/DCxHt5rVAhcw0I=\", true, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/gmait/OneDrive/Desktop/Final Project/frontend/src/components/Authentication/Login.js"],"names":["Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","VStack","Show","toast","React","useState","axios","useHistory","Login","show","setShow","email","setEmail","password","setPassword","loading","setLoading","useToast","history","handleClick","submitHandler","title","status","duration","isClosable","position","config","headers","data","post","localStorage","setItem","JSON","stringify","push","error","description","response","message","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { Show } from \"@chakra-ui/media-query\";\r\nimport { toast } from \"@chakra-ui/toast\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => setShow(!show);\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@email.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Guest Login\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}