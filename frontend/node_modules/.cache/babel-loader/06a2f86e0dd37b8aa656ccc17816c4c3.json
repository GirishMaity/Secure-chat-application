{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmait\\\\Desktop\\\\Final Project\\\\frontend\\\\src\\\\Context\\\\ChatProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nconst history = useHistory();\n\nconst ChatProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n    if (!userInfo) history.push(\"/\");\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      selectedChat,\n      setSelectedChat,\n      user,\n      setUser,\n      notification,\n      setNotification,\n      chats,\n      setChats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatProvider, \"2uTfR8sWJeEl19qqzNs/g7pPc1Y=\");\n\n_c = ChatProvider;\nexport const ChatState = () => {\n  _s2();\n\n  return useContext(ChatContext);\n};\n\n_s2(ChatState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = ChatState;\nexport default ChatProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatProvider\");\n$RefreshReg$(_c2, \"ChatState\");","map":{"version":3,"sources":["C:/Users/gmait/Desktop/Final Project/frontend/src/Context/ChatProvider.js"],"names":["React","createContext","useContext","useEffect","useState","useHistory","ChatContext","history","ChatProvider","children","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","userInfo","JSON","parse","localStorage","getItem","push","ChatState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEA,MAAMM,OAAO,GAAGF,UAAU,EAA1B;;AAEA,MAAMG,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAT,IAAAA,OAAO,CAACK,QAAD,CAAP;AAEA,QAAI,CAACA,QAAL,EAAeX,OAAO,CAACgB,IAAR,CAAa,GAAb;AAChB,GALQ,EAKN,CAAChB,OAAD,CALM,CAAT;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,YADK;AAELC,MAAAA,eAFK;AAGLC,MAAAA,IAHK;AAILC,MAAAA,OAJK;AAKLC,MAAAA,YALK;AAMLC,MAAAA,eANK;AAOLC,MAAAA,KAPK;AAQLC,MAAAA;AARK,KADT;AAAA,cAYGR;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7BD;;GAAMD,Y;;KAAAA,Y;AA+BN,OAAO,MAAMgB,SAAS,GAAG,MAAM;AAAA;;AAC7B,SAAOtB,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;IAAMkB,S;;MAAAA,S;AAIb,eAAehB,YAAf","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst history = useHistory();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n"]},"metadata":{},"sourceType":"module"}