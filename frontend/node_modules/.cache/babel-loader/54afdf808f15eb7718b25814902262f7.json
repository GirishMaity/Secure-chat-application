{"ast":null,"code":"// import React, { createContext, useContext, useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n// const ChatContext = createContext();\n// const ChatProvider = ({ children }) => {\n//   const [selectedChat, setSelectedChat] = useState();\n//   const [user, setUser] = useState();\n//   const [notification, setNotification] = useState([]);\n//   const [chats, setChats] = useState();\n//   const history = useHistory();\n//   useEffect(() => {\n//     const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n//     setUser(userInfo);\n//     if (!userInfo) history.push(\"/\");\n//   }, [history]);\n//   return (\n//     <ChatContext.Provider\n//       value={{\n//         selectedChat,\n//         setSelectedChat,\n//         user,\n//         setUser,\n//         notification,\n//         setNotification,\n//         chats,\n//         setChats,\n//       }}\n//     >\n//       {children}\n//     </ChatContext.Provider>\n//   );\n// };\n// export const ChatState = () => {\n//   return useContext(ChatContext);\n// };\n// export default ChatProvider;","map":{"version":3,"sources":["C:/Users/gmait/Desktop/Final Project/frontend/src/Context/ChatProvider.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\n// const ChatContext = createContext();\r\n\r\n// const ChatProvider = ({ children }) => {\r\n//   const [selectedChat, setSelectedChat] = useState();\r\n//   const [user, setUser] = useState();\r\n//   const [notification, setNotification] = useState([]);\r\n//   const [chats, setChats] = useState();\r\n\r\n//   const history = useHistory();\r\n\r\n//   useEffect(() => {\r\n//     const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n//     setUser(userInfo);\r\n\r\n//     if (!userInfo) history.push(\"/\");\r\n//   }, [history]);\r\n\r\n//   return (\r\n//     <ChatContext.Provider\r\n//       value={{\r\n//         selectedChat,\r\n//         setSelectedChat,\r\n//         user,\r\n//         setUser,\r\n//         notification,\r\n//         setNotification,\r\n//         chats,\r\n//         setChats,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </ChatContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const ChatState = () => {\r\n//   return useContext(ChatContext);\r\n// };\r\n\r\n// export default ChatProvider;\r\n"]},"metadata":{},"sourceType":"module"}