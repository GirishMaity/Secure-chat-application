[{"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\index.js":"1","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\App.js":"2","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\Pages\\ChatPage.js":"3","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\Pages\\Homepage.js":"4","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\Login.js":"5","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\Signup.js":"6","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\Context\\ChatProvider.js":"7","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\miscellaneous\\SideDrawer.js":"8","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\MyChats.js":"9","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\ChatBox.js":"10","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\miscellaneous\\ProfileModal.js":"11"},{"size":455,"mtime":1654066656057,"results":"12","hashOfConfig":"13"},{"size":385,"mtime":1644564172726,"results":"14","hashOfConfig":"13"},{"size":646,"mtime":1654009136871,"results":"15","hashOfConfig":"13"},{"size":1417,"mtime":1654066374391,"results":"16","hashOfConfig":"13"},{"size":3346,"mtime":1644692125850,"results":"17","hashOfConfig":"13"},{"size":5625,"mtime":1644690873842,"results":"18","hashOfConfig":"13"},{"size":1078,"mtime":1654066390293,"results":"19","hashOfConfig":"13"},{"size":2698,"mtime":1654077286685,"results":"20","hashOfConfig":"13"},{"size":117,"mtime":1654008972375,"results":"21","hashOfConfig":"13"},{"size":117,"mtime":1654009003256,"results":"22","hashOfConfig":"13"},{"size":1753,"mtime":1654064087716,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3jnq6s",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\index.js",[],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\App.js",["60"],[],"import { Button } from \"@chakra-ui/button\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ChatPage from \"./Pages/ChatPage\";\nimport Homepage from \"./Pages/Homepage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={ChatPage} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\Pages\\ChatPage.js",[],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\Pages\\Homepage.js",[],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\Login.js",["61","62"],[],"import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { Show } from \"@chakra-ui/media-query\";\r\nimport { toast } from \"@chakra-ui/toast\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => setShow(!show);\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          value={email}\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"test@email.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Test credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\Signup.js",["63"],[],"import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { Show } from \"@chakra-ui/media-query\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => setShow(!show);\r\n  const postDetails = (pics) => {\r\n    setLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an image\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"darom5sdn\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/darom5sdn/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an image\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  };\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords don't match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        { name, email, password, pic },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n      setLoading(false);\r\n      history.pushState(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your profile picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\Context\\ChatProvider.js",[],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\miscellaneous\\SideDrawer.js",["64","65","66","67","68","69","70","71","72"],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\MyChats.js",[],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\ChatBox.js",[],[],"C:\\Users\\gmait\\Desktop\\Final Project\\frontend\\src\\components\\Authentication\\miscellaneous\\ProfileModal.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":15},{"ruleId":"73","severity":1,"message":"77","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":25,"column":10,"nodeType":"75","messageId":"76","endLine":25,"endColumn":16},{"ruleId":"73","severity":1,"message":"80","line":25,"column":18,"nodeType":"75","messageId":"76","endLine":25,"endColumn":27},{"ruleId":"73","severity":1,"message":"81","line":26,"column":10,"nodeType":"75","messageId":"76","endLine":26,"endColumn":22},{"ruleId":"73","severity":1,"message":"82","line":26,"column":24,"nodeType":"75","messageId":"76","endLine":26,"endColumn":39},{"ruleId":"73","severity":1,"message":"83","line":27,"column":10,"nodeType":"75","messageId":"76","endLine":27,"endColumn":17},{"ruleId":"73","severity":1,"message":"84","line":27,"column":19,"nodeType":"75","messageId":"76","endLine":27,"endColumn":29},{"ruleId":"73","severity":1,"message":"85","line":28,"column":10,"nodeType":"75","messageId":"76","endLine":28,"endColumn":21},{"ruleId":"73","severity":1,"message":"86","line":28,"column":23,"nodeType":"75","messageId":"76","endLine":28,"endColumn":37},{"ruleId":"73","severity":1,"message":"87","line":32,"column":19,"nodeType":"75","messageId":"76","endLine":32,"endColumn":25},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Show' is defined but never used.","'toast' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'setSearchResult' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'loadingChat' is assigned a value but never used.","'setLoadingChat' is assigned a value but never used.","'onOpen' is assigned a value but never used."]